# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calculator.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import re

from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox

class Ui_MainWindow(QMainWindow):
    def __init__(self, parent=None):
        """Initializer."""
        super().__init__(parent)
        self.setupUi(self)
        self.ready = True
        self.btn_click.clicked.connect(self.calculate)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(424, 282)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.input_oper = QtWidgets.QTextEdit(self.centralwidget)
        self.input_oper.setGeometry(QtCore.QRect(120, 10, 51, 41))
        self.input_oper.setObjectName("input_oper")
        self.input_num_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.input_num_2.setGeometry(QtCore.QRect(180, 10, 101, 41))
        self.input_num_2.setObjectName("input_num_2")
        self.btn_click = QtWidgets.QPushButton(self.centralwidget)
        self.btn_click.setGeometry(QtCore.QRect(310, 70, 101, 41))
        self.btn_click.setObjectName("btn_click")
        self.input_num_1 = QtWidgets.QTextEdit(self.centralwidget)
        self.input_num_1.setGeometry(QtCore.QRect(10, 10, 101, 41))
        self.input_num_1.setObjectName("input_num_1")
        self.input_equals = QtWidgets.QTextEdit(self.centralwidget)
        self.input_equals.setGeometry(QtCore.QRect(310, 10, 101, 41))
        self.input_equals.setObjectName("input_equals")
        self.input_equals.setReadOnly(True)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 424, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.input_num_1, self.input_oper)
        MainWindow.setTabOrder(self.input_oper, self.input_num_2)
        MainWindow.setTabOrder(self.input_num_2, self.btn_click)

        self.input_num_1.setTabChangesFocus(True)
        self.input_oper.setTabChangesFocus(True)
        self.input_num_2.setTabChangesFocus(True)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.input_oper.setPlaceholderText(_translate("MainWindow", "operator"))
        self.input_num_2.setPlaceholderText(_translate("MainWindow", "number 2"))
        self.btn_click.setText(_translate("MainWindow", "Calcualte!"))
        self.input_num_1.setPlaceholderText(_translate("MainWindow", "number 1"))
        self.input_equals.setPlaceholderText(_translate("MainWindow", "Equals"))

    def calculate(self):
        # validate 
        # ONLY NUMBERS ARE ALLOWED INTO THE NUMBER TEXT BOXES
        if not self.ready:
            return

        self.ready = False

        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)
        msg.setWindowTitle("Error")
        
        error_dialog = QtWidgets.QErrorMessage()
        try:
            num_1 = int(self.input_num_1.toPlainText())
            num_2 = int(self.input_num_2.toPlainText())
        except  Exception as e:
            msg.setText("ONLY NUMBERS ARE ALLOWED INTO THE NUMBER TEXT BOXES")
            msg.exec_()
            self.ready = True
            return

        oper = self.input_oper.toPlainText().strip()

        if not re.match(r'^[*+-\/]$', oper):
            msg.setText('ONLY "+" "-" "*" and "/" Are allowed mathematical operators')
            msg.exec_()
            self.ready = True
            return

        if num_2 == 0:
            result = "Inf"
        else:
            result = eval(f"{num_1} {oper} {num_2}")

        self.input_equals.setText(f"{result}")
        self.ready = True

if __name__ == "__main__":
    # Create the application
    app = QApplication(sys.argv)
    # Create and show the application's main window
    win = Ui_MainWindow()
    win.show()
    # Run the application's main loop
    sys.exit(app.exec())